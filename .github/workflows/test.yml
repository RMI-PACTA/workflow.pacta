---
name: Test docker image

on:
  workflow_call:
    inputs:
      full-image-name:
        required: true
        type: string
      config-name:
        required: true
        type: string
      results-url:
        description: azure blob store path for results
        required: false
        default: "https://pactadatadev.blob.core.windows.net/ghactions-workflow-pacta-results"
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:

      - name: Checkout workflow.pacta
        uses: actions/checkout@v4

      - name: Prepare environment
        id: prepare
        env:
          CONFIG_NAME: ${{ inputs.config-name }}
        run: |
          config_file="tests/config/$CONFIG_NAME.json"
          echo "config_file: $config_file"

          HOLDINGS_DATE="$(jq -rc '.holdingsDate' $config_file)"
          echo "holdings-date=$HOLDINGS_DATE"
          echo "holdings-date=$HOLDINGS_DATE" >> "$GITHUB_OUTPUT"

          PACTA_DATA_URL="$(jq -rc '.pactaDataURL' $config_file)"
          echo "pacta-data-url=$PACTA_DATA_URL"
          echo "pacta-data-url=$PACTA_DATA_URL" >> "$GITHUB_OUTPUT"

          # includes handling for null/missing keys
          PARAMETERS="$(jq -rc '.parameters | select( . != null )' $config_file)"
          echo "parameters=$PARAMETERS"
          echo "parameters=$PARAMETERS" >> "$GITHUB_OUTPUT"

      # https://github.com/Azure/login?tab=readme-ov-file#login-with-openid-connect-oidc-recommended
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # https://github.com/marketplace/actions/azure-cli-action#workflow-to-execute-an-azure-cli-script-of-a-specific-cli-version
      - name: Download pacta-data
        uses: azure/CLI@v2
        env:
          PACTA_DATA_URL: ${{ steps.prepare.outputs.pacta-data-url }}
        with:
          # azcliversion: 2.30.0
          inlineScript: |
            echo "pacta_data_dir: $PACTA_DATA_DATE_DIR"
            az storage copy \
              --source "$PACTA_DATA_URL/*" \
              --destination "pacta-data" \
              --recursive \
              --exclude-pattern "*.sqlite"

      - name: Run Docker Image
        env:
          FULL_IMAGE_NAME: ${{ inputs.full-image-name }}
          PORTFOLIO_DIR: portfolios
          ANALYSIS_OUTPUT_DIR: analysis_output_dir
          PACTA_DATA_DIR: pacta-data
          WORKSPACE: ${{ github.workspace }}
          PARAMETERS: ${{ steps.prepare.outputs.parameters }}
        run: |
          mkdir -p "${WORKSPACE}/${ANALYSIS_OUTPUT_DIR}"
          chmod -R 777 "${WORKSPACE}/${ANALYSIS_OUTPUT_DIR}"
          docker run \
          --network none \
          --env LOG_LEVEL=DEBUG \
          --env ANALYSIS_OUTPUT_DIR="/mnt/analysis_output_dir" \
          --env PACTA_DATA_DIR="/mnt/pacta-data" \
          --env PORTFOLIO_DIR="/mnt/portfolios" \
          --mount type=bind,readonly,source=${WORKSPACE}/${PACTA_DATA_DIR},target=/mnt/pacta-data \
          --mount type=bind,source=${WORKSPACE}/${ANALYSIS_OUTPUT_DIR},target=/mnt/analysis_output_dir \
          --mount type=bind,source=${WORKSPACE}/${PORTFOLIO_DIR},target=/mnt/portfolios \
          $FULL_IMAGE_NAME \
          "$PARAMETERS"

      - name: List outputs
        run: |
          ls -lR analysis_output_dir

      # https://github.com/marketplace/actions/azure-cli-action#workflow-to-execute-an-azure-cli-script-of-a-specific-cli-version
      - name: Upload results to blob store
        uses: azure/CLI@v2
        env:
          CONFIG_NAME: ${{ inputs.config-name }}
          GITHUB_REF_NAME: ${{ github.ref_name}}
          GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          ANALYSIS_OUTPUT_DIR: "analysis_output_dir"
          RESULTS_URL: ${{ inputs.results-url }}
        with:
          inlineScript: |
            unique_directory="$RESULTS_URL/$GITHUB_REF_NAME/$GITHUB_RUN_NUMBER/$GITHUB_RUN_ATTEMPT/$CONFIG_NAME"
            az storage copy \
              --source "$ANALYSIS_OUTPUT_DIR" \
              --destination "$unique_directory" \
              --recursive

            latest_directory="$RESULTS_URL/$GITHUB_REF_NAME/latest/$CONFIG_NAME"
            az storage copy \
              --source "$ANALYSIS_OUTPUT_DIR" \
              --destination "$latest_directory" \
              --recursive
